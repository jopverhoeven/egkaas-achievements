name: Build

on:
  push:
    branches: [ master ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js $${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Packages
      run: npm ci
    
    - name: Build Application
      run: npm run build
    
    - name: Prepare Registry Names
      run: |
        echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
        echo IMAGE_TAG=$(echo ${{ github.ref }} | tr '[:upper:]' '[:lower:]' | awk '{split($0,a,"/"); print a[3]}') >> $GITHUB_ENV
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm/v7
        push: true
        tags: |
          ghcr.io/${{ env.IMAGE_REPOSITORY }}/egkaas-achievements:latest
          ghcr.io/${{ env.IMAGE_REPOSITORY }}/egkaas-achievements:${{github.sha}}
  
  deploy:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: PrepareReg Names
      run: |
        echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
        echo IMAGE_TAG=$(echo ${{ github.ref }} | tr '[:upper:]' '[:lower:]' | awk '{split($0,a,"/"); print a[3]}') >> $GITHUB_ENV
    
    - name: Kill running docker containers of egkaas-achievements
      run: docker rm $(docker stop $(docker ps -a -q --filter ancestor=ghcr.io/${{ env.IMAGE_REPOSITORY }}/egkaas-achievements:latest --format="{{.ID}}"))
      continue-on-error: true
    
    - name: Remove docker images of egkaas-achievements
      run: docker rmi ghcr.io/jopverhoeven/egkaas-achievements/egkaas-achievements
      continue-on-error: true
    
    - name: Run built Docker image
      run: docker run -v /etc/letsencrypt/live/egkaas-achievements/fullchain.pem:/certs/cert.pem -v /etc/letsencrypt/live/egkaas-achievements/privkey.pem:/certs/key.pem -d -p 80:80 -p 443:443 ghcr.io/jopverhoeven/egkaas-achievements/egkaas-achievements:latest